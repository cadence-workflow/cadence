(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{426:function(t,e,i){"use strict";i.r(e);var s=i(8),_=Object(s.a)({},(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"glossary"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#glossary"}},[t._v("#")]),t._v(" Glossary")]),t._v(" "),i("p",[t._v("This plugin allows referencing to a glossary term defined in "),i("code",[t._v("GLOSSARY.md")]),t._v(". To use it, just use "),i("code",[t._v(":term_name:")]),t._v(". If you want to use the plural of the term, simply put the display text in as the following "),i("code",[t._v(":term_name:term_names:")]),t._v(" to render "),i("code",[t._v("term names")])]),t._v(" "),i("h2",{attrs:{id:"example-of-glossary-reference"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#example-of-glossary-reference"}},[t._v("#")]),t._v(" Example of glossary reference")]),t._v(" "),i("p",[t._v("Cadence guarantees that there could be only one workflow (across all workflow types) with a given ID open per :domain: at any time. An attempt to start a workflow with the same ID is going to fail with "),i("code",[t._v("WorkflowExecutionAlreadyStarted")]),t._v(" error.")]),t._v(" "),i("h2",{attrs:{id:"example-of-all-glossary-items"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#example-of-all-glossary-items"}},[t._v("#")]),t._v(" Example of all glossary items")]),t._v(" "),i("ul",[i("li",[t._v(":activity:, :activity:activities:")]),t._v(" "),i("li",[t._v(":activity_task:, :activity_task:activity_tasks:")]),t._v(" "),i("li",[t._v(":activity_task_list:, :activity_task_list:activity_task_lists:")]),t._v(" "),i("li",[t._v(":activity_worker:, :activity_worker:activity_workers:")]),t._v(" "),i("li",[t._v(":archival:")]),t._v(" "),i("li",[t._v(":cli:")]),t._v(" "),i("li",[t._v(":client_stub:, :client_stub:client_stubs:")]),t._v(" "),i("li",[t._v(":decision:, :decision:decisions:")]),t._v(" "),i("li",[t._v(":decision_task:, :decision_task:decision_tasks:")]),t._v(" "),i("li",[t._v(":decision_task_list:, :decision_task_list:decision_task_lists:")]),t._v(" "),i("li",[t._v(":domain:, :domain:domains:")]),t._v(" "),i("li",[t._v(":event:, :event:events:")]),t._v(" "),i("li",[t._v(":event_history:, :event_history:event_histories:")]),t._v(" "),i("li",[t._v(":local_activity:, :local_activity:local_activities:")]),t._v(" "),i("li",[t._v(":query:, :query:queries:")]),t._v(" "),i("li",[t._v(":run_id:, :run_id:run_ids:")]),t._v(" "),i("li",[t._v(":signal:, :signal:signals:")]),t._v(" "),i("li",[t._v(":task:, :task:tasks:")]),t._v(" "),i("li",[t._v(":task_list:, :task_list:task_lists:")]),t._v(" "),i("li",[t._v(":task_token:, :task_token:task_tokens:")]),t._v(" "),i("li",[t._v(":worker:, :worker:workers:")]),t._v(" "),i("li",[t._v(":workflow:, :workflow:workflows:")]),t._v(" "),i("li",[t._v(":workflow_execution:, :workflow_execution:workflow_executions:")]),t._v(" "),i("li",[t._v(":workflow_id:, :workflow_id:workflow_ids:")]),t._v(" "),i("li",[t._v(":workflow_task:, :workflow_task:workflow_tasks:")]),t._v(" "),i("li",[t._v(":workflow_worker:, :workflow_worker:workflow_workers:")])])])}),[],!1,null,null,null);e.default=_.exports}}]);