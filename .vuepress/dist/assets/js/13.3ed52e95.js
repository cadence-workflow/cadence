(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{424:function(e,t,n){"use strict";n.r(t);var a=n(8),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"event-driven-application"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#event-driven-application"}},[e._v("#")]),e._v(" Event driven application")]),e._v(" "),n("p",[e._v("Many applications listen to multiple :event: sources, update the state of correspondent business entities,\nand have to execute actions if some state is reached.\nCadence is a good fit for many of these. It has direct support for asynchronous :event:events: (aka :signal:signals:),\nhas a simple programming model that obscures a lot of complexity\naround state persistence, and ensures external action execution through built-in retries.")]),e._v(" "),n("p",[e._v("Real-world examples:")]),e._v(" "),n("ul",[n("li",[e._v("Fraud detection where :workflow: reacts to :event:events: generated by consumer behavior")]),e._v(" "),n("li",[e._v("Customer loyalty program where the :workflow: accumulates reward points and applies them when requested")])])])}),[],!1,null,null,null);t.default=s.exports}}]);