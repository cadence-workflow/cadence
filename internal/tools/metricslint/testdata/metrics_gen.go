package structured

// Code generated by test_shenanigans; DO NOT EDIT

import "time"

func GeneratedFunction() {
	var emitter Emitter
	tags := Tags{}

	// allowed, generated code needs to follow the same rules
	emitter.Count("base_count", 1, tags)                 // want `success: base_count`
	emitter.Gauge("gauge", 12, tags)                     // want `success: gauge`
	emitter.Histogram("hist_ns", nil, time.Second, tags) // want `success: hist_ns`

	// disallowed, generated code needs to follow the same rules
	const sneakyConst = "bad_metric"
	emitter.IntHistogram(sneakyConst, nil, 3, tags) // want `metric names must be in-line strings, not consts or vars: sneakyConst`
	emitter.Count(sneakyConst, 1, tags)             // want `metric names must be in-line strings, not consts or vars: sneakyConst`
}
