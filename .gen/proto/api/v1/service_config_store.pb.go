// The MIT License (MIT)

// Copyright (c) 2017-2020 Uber Technologies Inc.

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: uber/cadence/api/v1/service_config_store.proto

package apiv1

import (
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"

	proto "github.com/gogo/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// If get_all is True, then all provided filters are ignored and all values associated with config_name
//will be returned. If get_all is False and no filters are specified (or no filter match), fallback value
//will be returned. If get_all is False and a filter(s) is specified, value that matches filter will be returned.
//If config_name cannot be found in database, default value will be returned.
type GetDynamicConfigRequest struct {
	ConfigName           string                 `protobuf:"bytes,1,opt,name=config_name,json=configName,proto3" json:"config_name,omitempty"`
	GetAll               bool                   `protobuf:"varint,2,opt,name=get_all,json=getAll,proto3" json:"get_all,omitempty"`
	Filters              []*DynamicConfigFilter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetDynamicConfigRequest) Reset()         { *m = GetDynamicConfigRequest{} }
func (m *GetDynamicConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetDynamicConfigRequest) ProtoMessage()    {}
func (*GetDynamicConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_437205fd559c1aaa, []int{0}
}
func (m *GetDynamicConfigRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetDynamicConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetDynamicConfigRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetDynamicConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDynamicConfigRequest.Merge(m, src)
}
func (m *GetDynamicConfigRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetDynamicConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDynamicConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDynamicConfigRequest proto.InternalMessageInfo

func (m *GetDynamicConfigRequest) GetConfigName() string {
	if m != nil {
		return m.ConfigName
	}
	return ""
}

func (m *GetDynamicConfigRequest) GetGetAll() bool {
	if m != nil {
		return m.GetAll
	}
	return false
}

func (m *GetDynamicConfigRequest) GetFilters() []*DynamicConfigFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

type GetDynamicConfigResponse struct {
	ConfigValues []*DynamicConfigValue `protobuf:"bytes,1,rep,name=config_values,json=configValues,proto3" json:"config_values,omitempty"`
	// Message regarding value source and/or type (is default, is fallback, from database, etc.)
	ValueSource          string   `protobuf:"bytes,2,opt,name=value_source,json=valueSource,proto3" json:"value_source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDynamicConfigResponse) Reset()         { *m = GetDynamicConfigResponse{} }
func (m *GetDynamicConfigResponse) String() string { return proto.CompactTextString(m) }
func (*GetDynamicConfigResponse) ProtoMessage()    {}
func (*GetDynamicConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_437205fd559c1aaa, []int{1}
}
func (m *GetDynamicConfigResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetDynamicConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetDynamicConfigResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetDynamicConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDynamicConfigResponse.Merge(m, src)
}
func (m *GetDynamicConfigResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetDynamicConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDynamicConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDynamicConfigResponse proto.InternalMessageInfo

func (m *GetDynamicConfigResponse) GetConfigValues() []*DynamicConfigValue {
	if m != nil {
		return m.ConfigValues
	}
	return nil
}

func (m *GetDynamicConfigResponse) GetValueSource() string {
	if m != nil {
		return m.ValueSource
	}
	return ""
}

// If filters field is not specified in DynamicConfigValue, value will update fallback value which supersedes
//the default value defined in codebase.
type UpdateDynamicConfigRequest struct {
	ConfigName           string                `protobuf:"bytes,1,opt,name=config_name,json=configName,proto3" json:"config_name,omitempty"`
	ConfigValues         []*DynamicConfigValue `protobuf:"bytes,2,rep,name=config_values,json=configValues,proto3" json:"config_values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateDynamicConfigRequest) Reset()         { *m = UpdateDynamicConfigRequest{} }
func (m *UpdateDynamicConfigRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDynamicConfigRequest) ProtoMessage()    {}
func (*UpdateDynamicConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_437205fd559c1aaa, []int{2}
}
func (m *UpdateDynamicConfigRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateDynamicConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateDynamicConfigRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateDynamicConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDynamicConfigRequest.Merge(m, src)
}
func (m *UpdateDynamicConfigRequest) XXX_Size() int {
	return m.Size()
}
func (m *UpdateDynamicConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDynamicConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDynamicConfigRequest proto.InternalMessageInfo

func (m *UpdateDynamicConfigRequest) GetConfigName() string {
	if m != nil {
		return m.ConfigName
	}
	return ""
}

func (m *UpdateDynamicConfigRequest) GetConfigValues() []*DynamicConfigValue {
	if m != nil {
		return m.ConfigValues
	}
	return nil
}

type UpdateDynamicConfigResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDynamicConfigResponse) Reset()         { *m = UpdateDynamicConfigResponse{} }
func (m *UpdateDynamicConfigResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateDynamicConfigResponse) ProtoMessage()    {}
func (*UpdateDynamicConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_437205fd559c1aaa, []int{3}
}
func (m *UpdateDynamicConfigResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateDynamicConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateDynamicConfigResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateDynamicConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDynamicConfigResponse.Merge(m, src)
}
func (m *UpdateDynamicConfigResponse) XXX_Size() int {
	return m.Size()
}
func (m *UpdateDynamicConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDynamicConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDynamicConfigResponse proto.InternalMessageInfo

// If no filters are specified, all values associated with config_name will be removed.
type RestoreDynamicConfigRequest struct {
	ConfigName           string                 `protobuf:"bytes,1,opt,name=config_name,json=configName,proto3" json:"config_name,omitempty"`
	Filters              []*DynamicConfigFilter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RestoreDynamicConfigRequest) Reset()         { *m = RestoreDynamicConfigRequest{} }
func (m *RestoreDynamicConfigRequest) String() string { return proto.CompactTextString(m) }
func (*RestoreDynamicConfigRequest) ProtoMessage()    {}
func (*RestoreDynamicConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_437205fd559c1aaa, []int{4}
}
func (m *RestoreDynamicConfigRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RestoreDynamicConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RestoreDynamicConfigRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RestoreDynamicConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestoreDynamicConfigRequest.Merge(m, src)
}
func (m *RestoreDynamicConfigRequest) XXX_Size() int {
	return m.Size()
}
func (m *RestoreDynamicConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RestoreDynamicConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RestoreDynamicConfigRequest proto.InternalMessageInfo

func (m *RestoreDynamicConfigRequest) GetConfigName() string {
	if m != nil {
		return m.ConfigName
	}
	return ""
}

func (m *RestoreDynamicConfigRequest) GetFilters() []*DynamicConfigFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

type RestoreDynamicConfigResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestoreDynamicConfigResponse) Reset()         { *m = RestoreDynamicConfigResponse{} }
func (m *RestoreDynamicConfigResponse) String() string { return proto.CompactTextString(m) }
func (*RestoreDynamicConfigResponse) ProtoMessage()    {}
func (*RestoreDynamicConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_437205fd559c1aaa, []int{5}
}
func (m *RestoreDynamicConfigResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RestoreDynamicConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RestoreDynamicConfigResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RestoreDynamicConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestoreDynamicConfigResponse.Merge(m, src)
}
func (m *RestoreDynamicConfigResponse) XXX_Size() int {
	return m.Size()
}
func (m *RestoreDynamicConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RestoreDynamicConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RestoreDynamicConfigResponse proto.InternalMessageInfo

type ListDynamicConfigRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDynamicConfigRequest) Reset()         { *m = ListDynamicConfigRequest{} }
func (m *ListDynamicConfigRequest) String() string { return proto.CompactTextString(m) }
func (*ListDynamicConfigRequest) ProtoMessage()    {}
func (*ListDynamicConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_437205fd559c1aaa, []int{6}
}
func (m *ListDynamicConfigRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListDynamicConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListDynamicConfigRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListDynamicConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDynamicConfigRequest.Merge(m, src)
}
func (m *ListDynamicConfigRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListDynamicConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDynamicConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDynamicConfigRequest proto.InternalMessageInfo

type ListDynamicConfigResponse struct {
	Entries              []*DynamicConfigEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListDynamicConfigResponse) Reset()         { *m = ListDynamicConfigResponse{} }
func (m *ListDynamicConfigResponse) String() string { return proto.CompactTextString(m) }
func (*ListDynamicConfigResponse) ProtoMessage()    {}
func (*ListDynamicConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_437205fd559c1aaa, []int{7}
}
func (m *ListDynamicConfigResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListDynamicConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListDynamicConfigResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListDynamicConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDynamicConfigResponse.Merge(m, src)
}
func (m *ListDynamicConfigResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListDynamicConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDynamicConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDynamicConfigResponse proto.InternalMessageInfo

func (m *ListDynamicConfigResponse) GetEntries() []*DynamicConfigEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type DynamicConfigEntry struct {
	Name                 string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DefaultValue         string                `protobuf:"bytes,2,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	Values               []*DynamicConfigValue `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DynamicConfigEntry) Reset()         { *m = DynamicConfigEntry{} }
func (m *DynamicConfigEntry) String() string { return proto.CompactTextString(m) }
func (*DynamicConfigEntry) ProtoMessage()    {}
func (*DynamicConfigEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_437205fd559c1aaa, []int{8}
}
func (m *DynamicConfigEntry) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynamicConfigEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynamicConfigEntry.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynamicConfigEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicConfigEntry.Merge(m, src)
}
func (m *DynamicConfigEntry) XXX_Size() int {
	return m.Size()
}
func (m *DynamicConfigEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicConfigEntry.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicConfigEntry proto.InternalMessageInfo

func (m *DynamicConfigEntry) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DynamicConfigEntry) GetDefaultValue() string {
	if m != nil {
		return m.DefaultValue
	}
	return ""
}

func (m *DynamicConfigEntry) GetValues() []*DynamicConfigValue {
	if m != nil {
		return m.Values
	}
	return nil
}

type DynamicConfigValue struct {
	Value                string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Filters              []*DynamicConfigFilter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DynamicConfigValue) Reset()         { *m = DynamicConfigValue{} }
func (m *DynamicConfigValue) String() string { return proto.CompactTextString(m) }
func (*DynamicConfigValue) ProtoMessage()    {}
func (*DynamicConfigValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_437205fd559c1aaa, []int{9}
}
func (m *DynamicConfigValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynamicConfigValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynamicConfigValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynamicConfigValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicConfigValue.Merge(m, src)
}
func (m *DynamicConfigValue) XXX_Size() int {
	return m.Size()
}
func (m *DynamicConfigValue) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicConfigValue.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicConfigValue proto.InternalMessageInfo

func (m *DynamicConfigValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *DynamicConfigValue) GetFilters() []*DynamicConfigFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

type DynamicConfigFilter struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynamicConfigFilter) Reset()         { *m = DynamicConfigFilter{} }
func (m *DynamicConfigFilter) String() string { return proto.CompactTextString(m) }
func (*DynamicConfigFilter) ProtoMessage()    {}
func (*DynamicConfigFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_437205fd559c1aaa, []int{10}
}
func (m *DynamicConfigFilter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynamicConfigFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynamicConfigFilter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynamicConfigFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicConfigFilter.Merge(m, src)
}
func (m *DynamicConfigFilter) XXX_Size() int {
	return m.Size()
}
func (m *DynamicConfigFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicConfigFilter.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicConfigFilter proto.InternalMessageInfo

func (m *DynamicConfigFilter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DynamicConfigFilter) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*GetDynamicConfigRequest)(nil), "uber.cadence.api.v1.GetDynamicConfigRequest")
	proto.RegisterType((*GetDynamicConfigResponse)(nil), "uber.cadence.api.v1.GetDynamicConfigResponse")
	proto.RegisterType((*UpdateDynamicConfigRequest)(nil), "uber.cadence.api.v1.UpdateDynamicConfigRequest")
	proto.RegisterType((*UpdateDynamicConfigResponse)(nil), "uber.cadence.api.v1.UpdateDynamicConfigResponse")
	proto.RegisterType((*RestoreDynamicConfigRequest)(nil), "uber.cadence.api.v1.RestoreDynamicConfigRequest")
	proto.RegisterType((*RestoreDynamicConfigResponse)(nil), "uber.cadence.api.v1.RestoreDynamicConfigResponse")
	proto.RegisterType((*ListDynamicConfigRequest)(nil), "uber.cadence.api.v1.ListDynamicConfigRequest")
	proto.RegisterType((*ListDynamicConfigResponse)(nil), "uber.cadence.api.v1.ListDynamicConfigResponse")
	proto.RegisterType((*DynamicConfigEntry)(nil), "uber.cadence.api.v1.DynamicConfigEntry")
	proto.RegisterType((*DynamicConfigValue)(nil), "uber.cadence.api.v1.DynamicConfigValue")
	proto.RegisterType((*DynamicConfigFilter)(nil), "uber.cadence.api.v1.DynamicConfigFilter")
}

func init() {
	proto.RegisterFile("uber/cadence/api/v1/service_config_store.proto", fileDescriptor_437205fd559c1aaa)
}

var fileDescriptor_437205fd559c1aaa = []byte{
	// 559 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0x4f, 0x8f, 0x12, 0x4f,
	0x10, 0x4d, 0xc3, 0xef, 0x07, 0xbb, 0x05, 0x6b, 0xb4, 0xd9, 0x84, 0x71, 0x56, 0x11, 0xc7, 0x83,
	0x1c, 0x74, 0x46, 0xd6, 0xa3, 0x87, 0x0d, 0xf8, 0x2f, 0x26, 0x1b, 0x43, 0x66, 0xa3, 0x07, 0x0f,
	0x92, 0x66, 0x28, 0xb0, 0x93, 0x61, 0x66, 0x9c, 0xee, 0x21, 0x6e, 0xbc, 0x79, 0x35, 0xf1, 0xea,
	0x57, 0xf2, 0xe8, 0x47, 0x30, 0x9c, 0xfd, 0x10, 0x86, 0x9e, 0x5e, 0x65, 0x97, 0x46, 0x01, 0xbd,
	0xd1, 0xd5, 0xf5, 0xea, 0x3d, 0xea, 0x75, 0x4d, 0x81, 0x9b, 0x0d, 0x30, 0xf5, 0x02, 0x36, 0xc4,
	0x28, 0x40, 0x8f, 0x25, 0xdc, 0x9b, 0xb6, 0x3d, 0x81, 0xe9, 0x94, 0x07, 0xd8, 0x0f, 0xe2, 0x68,
	0xc4, 0xc7, 0x7d, 0x21, 0xe3, 0x14, 0xdd, 0x24, 0x8d, 0x65, 0x4c, 0x6b, 0xf3, 0x7c, 0x57, 0xe7,
	0xbb, 0x2c, 0xe1, 0xee, 0xb4, 0xed, 0x7c, 0x26, 0x50, 0x7f, 0x8a, 0xf2, 0xd1, 0x69, 0xc4, 0x26,
	0x3c, 0x78, 0xa8, 0x50, 0x3e, 0xbe, 0xcd, 0x50, 0x48, 0x7a, 0x03, 0x2a, 0xba, 0x4c, 0xc4, 0x26,
	0x68, 0x91, 0x26, 0x69, 0xed, 0xfa, 0x90, 0x87, 0x9e, 0xb3, 0x09, 0xd2, 0x3a, 0x94, 0xc7, 0x28,
	0xfb, 0x2c, 0x0c, 0xad, 0x42, 0x93, 0xb4, 0x76, 0xfc, 0xd2, 0x18, 0x65, 0x27, 0x0c, 0x69, 0x17,
	0xca, 0x23, 0x1e, 0x4a, 0x4c, 0x85, 0x55, 0x6c, 0x16, 0x5b, 0x95, 0xc3, 0x96, 0x6b, 0x20, 0x77,
	0xcf, 0xb1, 0x3e, 0x51, 0x00, 0xff, 0x0c, 0xe8, 0x7c, 0x24, 0x60, 0x2d, 0x2b, 0x13, 0x49, 0x1c,
	0x09, 0xa4, 0xc7, 0xb0, 0xa7, 0xa5, 0x4d, 0x59, 0x98, 0xa1, 0xb0, 0x88, 0xa2, 0xb9, 0xfd, 0x67,
	0x9a, 0x97, 0xf3, 0x7c, 0xbf, 0x1a, 0xfc, 0x3a, 0x08, 0x7a, 0x13, 0xaa, 0xaa, 0x4c, 0x5f, 0xc4,
	0x59, 0x1a, 0xa0, 0xfa, 0x33, 0xbb, 0x7e, 0x45, 0xc5, 0x4e, 0x54, 0x68, 0xae, 0xc6, 0x7e, 0x91,
	0x0c, 0x99, 0xc4, 0xed, 0x5a, 0xb5, 0x24, 0xb8, 0xf0, 0x17, 0x82, 0x9d, 0xeb, 0x70, 0x60, 0x14,
	0x93, 0x77, 0xc7, 0xf9, 0x40, 0xe0, 0xc0, 0x47, 0xe5, 0xfd, 0x76, 0x6a, 0x17, 0xfc, 0x2b, 0x6c,
	0xeb, 0x5f, 0x03, 0xae, 0x99, 0x35, 0x68, 0x91, 0x36, 0x58, 0xc7, 0x5c, 0x18, 0x5f, 0x9e, 0xf3,
	0x1a, 0xae, 0x1a, 0xee, 0xb4, 0xf7, 0x1d, 0x28, 0x63, 0x24, 0x53, 0xbe, 0x89, 0xeb, 0x8f, 0x23,
	0x99, 0x9e, 0xfa, 0x67, 0x38, 0xe7, 0x13, 0x01, 0xba, 0x7c, 0x4f, 0x29, 0xfc, 0xb7, 0xd0, 0x10,
	0xf5, 0x9b, 0xde, 0x82, 0xbd, 0x21, 0x8e, 0x58, 0x16, 0xca, 0xdc, 0x39, 0xfd, 0x38, 0xaa, 0x3a,
	0xa8, 0x0c, 0xa1, 0x47, 0x50, 0xd2, 0xb6, 0x16, 0x37, 0xb3, 0x55, 0xc3, 0x9c, 0xe8, 0x82, 0x9e,
	0xbc, 0xec, 0x3e, 0xfc, 0x9f, 0x73, 0xe6, 0x82, 0xf2, 0xc3, 0x3f, 0x31, 0xe7, 0x08, 0x6a, 0x86,
	0x7b, 0x63, 0x03, 0x7e, 0x8a, 0x28, 0x2c, 0x88, 0x38, 0xfc, 0x5e, 0x84, 0x4b, 0x39, 0xf4, 0x64,
	0x6e, 0x71, 0xa7, 0xf7, 0x8c, 0xc6, 0x70, 0xf9, 0xe2, 0xbc, 0xd2, 0x3b, 0x46, 0x69, 0x2b, 0x3e,
	0x38, 0xf6, 0xdd, 0x35, 0xb3, 0xf5, 0x43, 0x78, 0x07, 0x35, 0xc3, 0x14, 0x50, 0xcf, 0x58, 0x65,
	0xf5, 0xf0, 0xda, 0xf7, 0xd6, 0x07, 0x68, 0xe6, 0xf7, 0xb0, 0x6f, 0x7a, 0xdb, 0xd4, 0x5c, 0xe9,
	0x37, 0xa3, 0x68, 0xb7, 0x37, 0x40, 0x68, 0xf2, 0x14, 0xae, 0x2c, 0x0d, 0x07, 0x35, 0xb7, 0x6e,
	0xd5, 0x80, 0xd9, 0xee, 0xba, 0xe9, 0x39, 0x67, 0x77, 0xf0, 0x65, 0xd6, 0x20, 0x5f, 0x67, 0x0d,
	0xf2, 0x6d, 0xd6, 0x20, 0x50, 0x0f, 0xe2, 0x89, 0xa9, 0x40, 0x77, 0xa7, 0x93, 0xf0, 0xde, 0x7c,
	0xd9, 0xf4, 0xc8, 0x2b, 0x6f, 0xcc, 0xe5, 0x9b, 0x6c, 0xe0, 0x06, 0xf1, 0xc4, 0x3b, 0xb7, 0xa9,
	0xdc, 0x31, 0x46, 0x9e, 0x5a, 0x49, 0x7a, 0x69, 0x3d, 0x60, 0x09, 0x9f, 0xb6, 0x07, 0x25, 0x15,
	0xbb, 0xff, 0x23, 0x00, 0x00, 0xff, 0xff, 0x12, 0x38, 0x57, 0x87, 0xd8, 0x06, 0x00, 0x00,
}

func (m *GetDynamicConfigRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetDynamicConfigRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetDynamicConfigRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Filters) > 0 {
		for iNdEx := len(m.Filters) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Filters[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintServiceConfigStore(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.GetAll {
		i--
		if m.GetAll {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.ConfigName) > 0 {
		i -= len(m.ConfigName)
		copy(dAtA[i:], m.ConfigName)
		i = encodeVarintServiceConfigStore(dAtA, i, uint64(len(m.ConfigName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetDynamicConfigResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetDynamicConfigResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetDynamicConfigResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ValueSource) > 0 {
		i -= len(m.ValueSource)
		copy(dAtA[i:], m.ValueSource)
		i = encodeVarintServiceConfigStore(dAtA, i, uint64(len(m.ValueSource)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ConfigValues) > 0 {
		for iNdEx := len(m.ConfigValues) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ConfigValues[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintServiceConfigStore(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *UpdateDynamicConfigRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateDynamicConfigRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateDynamicConfigRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ConfigValues) > 0 {
		for iNdEx := len(m.ConfigValues) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ConfigValues[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintServiceConfigStore(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.ConfigName) > 0 {
		i -= len(m.ConfigName)
		copy(dAtA[i:], m.ConfigName)
		i = encodeVarintServiceConfigStore(dAtA, i, uint64(len(m.ConfigName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpdateDynamicConfigResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateDynamicConfigResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateDynamicConfigResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *RestoreDynamicConfigRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RestoreDynamicConfigRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RestoreDynamicConfigRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Filters) > 0 {
		for iNdEx := len(m.Filters) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Filters[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintServiceConfigStore(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.ConfigName) > 0 {
		i -= len(m.ConfigName)
		copy(dAtA[i:], m.ConfigName)
		i = encodeVarintServiceConfigStore(dAtA, i, uint64(len(m.ConfigName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RestoreDynamicConfigResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RestoreDynamicConfigResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RestoreDynamicConfigResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ListDynamicConfigRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListDynamicConfigRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListDynamicConfigRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ListDynamicConfigResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListDynamicConfigResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListDynamicConfigResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Entries) > 0 {
		for iNdEx := len(m.Entries) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entries[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintServiceConfigStore(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *DynamicConfigEntry) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynamicConfigEntry) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynamicConfigEntry) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Values) > 0 {
		for iNdEx := len(m.Values) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Values[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintServiceConfigStore(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.DefaultValue) > 0 {
		i -= len(m.DefaultValue)
		copy(dAtA[i:], m.DefaultValue)
		i = encodeVarintServiceConfigStore(dAtA, i, uint64(len(m.DefaultValue)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintServiceConfigStore(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynamicConfigValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynamicConfigValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynamicConfigValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Filters) > 0 {
		for iNdEx := len(m.Filters) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Filters[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintServiceConfigStore(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintServiceConfigStore(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynamicConfigFilter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynamicConfigFilter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynamicConfigFilter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintServiceConfigStore(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintServiceConfigStore(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintServiceConfigStore(dAtA []byte, offset int, v uint64) int {
	offset -= sovServiceConfigStore(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetDynamicConfigRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ConfigName)
	if l > 0 {
		n += 1 + l + sovServiceConfigStore(uint64(l))
	}
	if m.GetAll {
		n += 2
	}
	if len(m.Filters) > 0 {
		for _, e := range m.Filters {
			l = e.Size()
			n += 1 + l + sovServiceConfigStore(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetDynamicConfigResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ConfigValues) > 0 {
		for _, e := range m.ConfigValues {
			l = e.Size()
			n += 1 + l + sovServiceConfigStore(uint64(l))
		}
	}
	l = len(m.ValueSource)
	if l > 0 {
		n += 1 + l + sovServiceConfigStore(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdateDynamicConfigRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ConfigName)
	if l > 0 {
		n += 1 + l + sovServiceConfigStore(uint64(l))
	}
	if len(m.ConfigValues) > 0 {
		for _, e := range m.ConfigValues {
			l = e.Size()
			n += 1 + l + sovServiceConfigStore(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdateDynamicConfigResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RestoreDynamicConfigRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ConfigName)
	if l > 0 {
		n += 1 + l + sovServiceConfigStore(uint64(l))
	}
	if len(m.Filters) > 0 {
		for _, e := range m.Filters {
			l = e.Size()
			n += 1 + l + sovServiceConfigStore(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RestoreDynamicConfigResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListDynamicConfigRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListDynamicConfigResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Entries) > 0 {
		for _, e := range m.Entries {
			l = e.Size()
			n += 1 + l + sovServiceConfigStore(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynamicConfigEntry) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovServiceConfigStore(uint64(l))
	}
	l = len(m.DefaultValue)
	if l > 0 {
		n += 1 + l + sovServiceConfigStore(uint64(l))
	}
	if len(m.Values) > 0 {
		for _, e := range m.Values {
			l = e.Size()
			n += 1 + l + sovServiceConfigStore(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynamicConfigValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovServiceConfigStore(uint64(l))
	}
	if len(m.Filters) > 0 {
		for _, e := range m.Filters {
			l = e.Size()
			n += 1 + l + sovServiceConfigStore(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynamicConfigFilter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovServiceConfigStore(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovServiceConfigStore(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovServiceConfigStore(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozServiceConfigStore(x uint64) (n int) {
	return sovServiceConfigStore(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetDynamicConfigRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServiceConfigStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetDynamicConfigRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetDynamicConfigRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfigName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServiceConfigStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConfigName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GetAll", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServiceConfigStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.GetAll = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServiceConfigStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Filters = append(m.Filters, &DynamicConfigFilter{})
			if err := m.Filters[len(m.Filters)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServiceConfigStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetDynamicConfigResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServiceConfigStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetDynamicConfigResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetDynamicConfigResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfigValues", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServiceConfigStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConfigValues = append(m.ConfigValues, &DynamicConfigValue{})
			if err := m.ConfigValues[len(m.ConfigValues)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValueSource", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServiceConfigStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ValueSource = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServiceConfigStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateDynamicConfigRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServiceConfigStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateDynamicConfigRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateDynamicConfigRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfigName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServiceConfigStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConfigName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfigValues", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServiceConfigStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConfigValues = append(m.ConfigValues, &DynamicConfigValue{})
			if err := m.ConfigValues[len(m.ConfigValues)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServiceConfigStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateDynamicConfigResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServiceConfigStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateDynamicConfigResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateDynamicConfigResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipServiceConfigStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RestoreDynamicConfigRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServiceConfigStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RestoreDynamicConfigRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RestoreDynamicConfigRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfigName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServiceConfigStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConfigName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServiceConfigStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Filters = append(m.Filters, &DynamicConfigFilter{})
			if err := m.Filters[len(m.Filters)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServiceConfigStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RestoreDynamicConfigResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServiceConfigStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RestoreDynamicConfigResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RestoreDynamicConfigResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipServiceConfigStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListDynamicConfigRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServiceConfigStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListDynamicConfigRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListDynamicConfigRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipServiceConfigStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListDynamicConfigResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServiceConfigStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListDynamicConfigResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListDynamicConfigResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entries", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServiceConfigStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entries = append(m.Entries, &DynamicConfigEntry{})
			if err := m.Entries[len(m.Entries)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServiceConfigStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynamicConfigEntry) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServiceConfigStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynamicConfigEntry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynamicConfigEntry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServiceConfigStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServiceConfigStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DefaultValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Values", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServiceConfigStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Values = append(m.Values, &DynamicConfigValue{})
			if err := m.Values[len(m.Values)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServiceConfigStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynamicConfigValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServiceConfigStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynamicConfigValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynamicConfigValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServiceConfigStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServiceConfigStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Filters = append(m.Filters, &DynamicConfigFilter{})
			if err := m.Filters[len(m.Filters)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServiceConfigStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynamicConfigFilter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServiceConfigStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynamicConfigFilter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynamicConfigFilter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServiceConfigStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServiceConfigStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServiceConfigStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServiceConfigStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipServiceConfigStore(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowServiceConfigStore
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowServiceConfigStore
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowServiceConfigStore
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthServiceConfigStore
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupServiceConfigStore
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthServiceConfigStore
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthServiceConfigStore        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowServiceConfigStore          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupServiceConfigStore = fmt.Errorf("proto: unexpected end of group")
)
