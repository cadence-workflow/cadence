name: Workflow for Breaking Change Reminder
on:
  pull_request:
    paths:
      - 'schema/**'

jobs:
  auto-comment:
    runs-on: ubuntu-latest

    steps:
    - name: Check PR Changes
      id: pr-changes
      run: echo "::set-output name=changes::${{ toJson(github.event.pull_request.changed_files) }}"

    - name: Create Comment
      if: steps.pr-changes.outputs.changes != '[]'
      env:
        ACTIONS_STEP_DEBUG: true
      run: |
        PR_URL="https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}"
        BODY=$(curl $PR_URL | jq '.body')
        CHECKLIST=(
          "Detailed Description"
          "Impact Analysis"
          "Testing Plan"
          "Rollout Plan"
        )
        for i in "${CHECKLIST[@]}"; do
          if [[ $BODY ~= *$i* ]]; then
            continue
          else
            read -r -d '' COMMENT << EOM
            ### Detailed Description
            [In-depth description of the changes made to the schema, specifying new fields, removed fields, or modified data structures]

            ### Impact Analysis
            - **Backward Compatibility**: [Analysis of backward compatibility]
            - **Forward Compatibility**: [Analysis of forward compatibility]

            ### Testing Plan
            - **Unit Tests**: [Do we have unit test covering the change?]
            - **Persistence Tests**: [If the change is related to a data type which is persisted, do we have persistence tests covering the change?]
            - **Integration Tests**: [Do we have integration test covering the change?]
            - **Compatibility Tests**: [Have we done tests to test the backward and forward compatibility?]

            ### Rollout Plan
            - What is the rollout plan?
            - Does the order of deployment matter?
            - Is it safe to rollback? Does the order of rollback matter?
            - Is there a kill switch to mitigate the impact immediately?
            EOM
            echo "Schema changes detected! Please update the PR description with the following details:"
            echo "$COMMENT"
            exit 1
          fi
        done
