// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/uber/cadence/common/archiver/gcloud/connector (interfaces: ObjectIteratorWrapper)
//
// Generated by this command:
//
//	mockgen -package mocks -destination mocks/ObjectIteratorWrapper.go github.com/uber/cadence/common/archiver/gcloud/connector ObjectIteratorWrapper
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	storage "cloud.google.com/go/storage"
	gomock "go.uber.org/mock/gomock"
)

// MockObjectIteratorWrapper is a mock of ObjectIteratorWrapper interface.
type MockObjectIteratorWrapper struct {
	ctrl     *gomock.Controller
	recorder *MockObjectIteratorWrapperMockRecorder
	isgomock struct{}
}

// MockObjectIteratorWrapperMockRecorder is the mock recorder for MockObjectIteratorWrapper.
type MockObjectIteratorWrapperMockRecorder struct {
	mock *MockObjectIteratorWrapper
}

// NewMockObjectIteratorWrapper creates a new mock instance.
func NewMockObjectIteratorWrapper(ctrl *gomock.Controller) *MockObjectIteratorWrapper {
	mock := &MockObjectIteratorWrapper{ctrl: ctrl}
	mock.recorder = &MockObjectIteratorWrapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockObjectIteratorWrapper) EXPECT() *MockObjectIteratorWrapperMockRecorder {
	return m.recorder
}

// Next mocks base method.
func (m *MockObjectIteratorWrapper) Next() (*storage.ObjectAttrs, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Next")
	ret0, _ := ret[0].(*storage.ObjectAttrs)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Next indicates an expected call of Next.
func (mr *MockObjectIteratorWrapperMockRecorder) Next() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Next", reflect.TypeOf((*MockObjectIteratorWrapper)(nil).Next))
}
