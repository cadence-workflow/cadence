// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/uber/cadence/common/archiver/gcloud/connector (interfaces: WriterWrapper)
//
// Generated by this command:
//
//	mockgen -package mocks -destination mocks/WriterWrapper.go github.com/uber/cadence/common/archiver/gcloud/connector WriterWrapper
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockWriterWrapper is a mock of WriterWrapper interface.
type MockWriterWrapper struct {
	ctrl     *gomock.Controller
	recorder *MockWriterWrapperMockRecorder
	isgomock struct{}
}

// MockWriterWrapperMockRecorder is the mock recorder for MockWriterWrapper.
type MockWriterWrapperMockRecorder struct {
	mock *MockWriterWrapper
}

// NewMockWriterWrapper creates a new mock instance.
func NewMockWriterWrapper(ctrl *gomock.Controller) *MockWriterWrapper {
	mock := &MockWriterWrapper{ctrl: ctrl}
	mock.recorder = &MockWriterWrapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWriterWrapper) EXPECT() *MockWriterWrapperMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockWriterWrapper) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockWriterWrapperMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockWriterWrapper)(nil).Close))
}

// CloseWithError mocks base method.
func (m *MockWriterWrapper) CloseWithError(err error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloseWithError", err)
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseWithError indicates an expected call of CloseWithError.
func (mr *MockWriterWrapperMockRecorder) CloseWithError(err any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseWithError", reflect.TypeOf((*MockWriterWrapper)(nil).CloseWithError), err)
}

// Write mocks base method.
func (m *MockWriterWrapper) Write(p []byte) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Write", p)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Write indicates an expected call of Write.
func (mr *MockWriterWrapperMockRecorder) Write(p any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockWriterWrapper)(nil).Write), p)
}
